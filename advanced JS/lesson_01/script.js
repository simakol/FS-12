// ***************–ü—Ä–æ—Ç–æ—Ç–∏–ø–Ω–µ –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è —Ç–∞ –º–µ—Ç–æ–¥ Object.create***************\\
// const user = {
//   name: "Alice",
//   age: 23,
//   sayHello() {
//     console.log(`Hello my name is ${this.name}`);
//   },
//   getAge() {
//     console.log(`my age ${this.age}`);
//   },
// };

// const student = Object.create(user); // —Å—Ç–≤–æ—Ä—é—é –Ω–æ–≤–∏–π –ø—É—Å—Ç–∏–π –æ–± º—î–∫—Ç student —ñ –≤–∫–∞–∑—É—é –æ–± º—î–∫—Ç user —è–∫ –ø—Ä–æ—Ç–æ—Ç–∏–ø

// console.log(student);
// student.sayHello();

// student.name = "Kate";
// student.sayHello();

// student.getAge();

// student.age = 30;
// student.getAge();

// const arr = [1, 2, 3];

// arr.push(4);

// console.log(arr);

// *********************************ES6 Class*********************************\\

// *****–ü—É–±–ª—ñ—á–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ç–∞ –º–µ—Ç–æ–¥–∏***** \\
// class User {
//   // –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä - —Ü–µ –º–µ—Ç–æ–¥, —è–∫–∏–π –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—ñ–¥ —á–∞—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –µ–∫–∑–µ–º–ø–ª—è—Ä—É –∫–ª–∞—Å—É (–µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É - —Ü–µ –Ω–æ–≤–∏–π –æ–± º—î–∫—Ç, —è–∫–∏–π —Å—Ç–≤–æ—Ä–µ–Ω–æ –∑–∞ —à–∞–±–ª–æ–Ω–æ–º —Å–∞–º–æ–≥–æ –∫–ª–∞—Å—É)
//   constructor(name) {
//     this.name = name;
//   }

//   showName() {
//     console.log(`Hello my name is ${this.name}`);
//     // this –ø–æ—Å–∏–ª–∞—î—Ç—å—Å—è –Ω–∞ –æ–± º—î–∫—Ç, —è–∫–∏–π –≤–∏–∫–ª–∏–∫–∞–≤ —Ñ—É–Ω–∫—Ü—ñ—é, —Ç–æ–±—Ç–æ, –Ω–∞ —Ç–µ–π –æ–± º—î–∫—Ç, —è–∫–∏–π —Å—Ç–æ—ó—Ç—å –∑–ª—ñ–≤–∞ –≤—ñ–¥ –∫—Ä–∞–ø–∫–∏
//   }
// }

// const student = new User("Alice");
// // { name: "Alice" }
// // new - –æ–ø–µ—Ä–∞—Ç–æ—Ä, —è–∫–∏–π —Ä–æ–±–∏—Ç—å –¥–µ–∫—ñ–ª—å–∫–∞ –≤–∞–∂–ª–∏–≤–∏—Ö –¥—ñ–π:
// // 1. –≤—ñ–Ω —Å—Ç–≤–æ—Ä—é—î –ø—É—Å—Ç–∏–π –æ–± º—î–∫—Ç - –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É
// // 2. –≤—ñ–Ω –≤–∏–∫–ª–∏–∫–∞—î constructor —ñ –≤–∫–∞–∑—É—î —â–æ this –±—É–¥–µ –ø–æ—Å–∏–ª–∞—Ç–∏—Å—è –Ω–∞ —Ü–µ–π –ø—É—Å—Ç–∏–π –æ–± º—î–∫—Ç (–µ–∫–∑–µ–º–ø–ª—è—Ä)
// console.log(student);
// student.showName();

// const student2 = new User("Alex")
// console.log(student2)
// student2.showName()

// **********–ù–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è –∫–ª–∞—Å—ñ–≤********* \\

// class Rectangle {
//   constructor(height, width) {
//     this.name = "Rectangle";
//     this.height = height;
//     this.width = width;
//   }

//   getArea() {
//     return this.width * this.height;
//   }

//   getPerimetr() {
//     return this.width * 2 + this.height * 2;
//   }

//   sayHello() {
//     console.log(
//       `Hello, I am ${
//         this.name
//       }. My area is ${this.getArea()}. My perimetr is ${this.getPerimetr()}`
//     );
//   }
// }

// extends - —Ä–æ–∑—à–∏—Ä—é—î - —Ü–µ –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è –∫–ª–∞—Å—ñ–≤
// –ø—Ä–∏ –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—ñ –∫–ª–∞—Å—ñ–≤ –æ–±–æ–≤ º—è–∑–∫–æ–≤–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –±–∞—Ç—å–∫–∞ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ñ –¥–∏—Ç–∏–Ω–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ—ó super()

// class Square extends Rectangle {
//   constructor(length) {
//     super(length, length);
//     this.name = "Square";
//   }
// }

// const rectangle = new Rectangle(5, 10);
// console.log(rectangle);
// rectangle.sayHello();

// const square = new Square(5);
// console.log(square)
// square.sayHello();

// ***********************–ü—Ä–∞–∫—Ç–∏–∫–∞*********************** \\

// *******Task-2******* \\
// –†–µ–∞–ª—ñ–∑—É–π—Ç–µ –∫–ª–∞—Å Student, —è–∫–∏–π —É—Å–ø–∞–¥–∫–æ–≤—É–≤–∞—Ç–∏–º–µ—Ç—å—Å—è –≤—ñ–¥ –∫–ª–∞—Å—É User. –¶–µ–π –∫–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ —Ç–∞–∫—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ:
// name –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (—ñ–º'—è, —É—Å–ø–∞–¥–∫–æ–≤—É—î—Ç—å—Å—è –≤—ñ–¥ User),
// surname –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (–ø—Ä—ñ–∑–≤–∏—â–µ, —É—Å–ø–∞–¥–∫–æ–≤—É—î—Ç—å—Å—è –≤—ñ–¥ User),
// year (—Ä—ñ–∫ –≤—Å—Ç—É–ø—É –¥–æ –≤—É–∑—É).

// –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –º–µ—Ç–æ–¥ getFullName() (—É—Å–ø–∞–¥–∫–æ–≤—É—î—Ç—å—Å—è –≤—ñ–¥ User), –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —è–∫–æ–≥–æ –º–æ–∂–Ω–∞ –≤–∏–≤–µ—Å—Ç–∏ –æ–¥–Ω–æ—á–∞—Å–Ω–æ —ñ–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ —Å—Ç—É–¥–µ–Ω—Ç–∞.
// –¢–∞–∫–æ–∂ –∫–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –º–µ—Ç–æ–¥ getCourse(), —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç–∏–º–µ –ø–æ—Ç–æ—á–Ω–∏–π –∫—É—Ä—Å —Å—Ç—É–¥–µ–Ω—Ç–∞ (–≤—ñ–¥ 1 –¥–æ 5, —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–µ—Ä–µ–≤–∏—â—É—î 5  –∫—É—Ä—Å –≤–∏–≤–æ–¥–∏—Ç–∏ —â–æ —Å—Ç—É–¥–µ–Ω—Ç —è–≤–ª—è—î—Ç—å—Å—è –≤–∏–ø—É—Å–∫–Ω–∏–∫–æ–º).
// –ö—É—Ä—Å –æ–±—á–∏—Å–ª—é—î—Ç—å—Å—è —Ç–∞–∫: –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä–æ–∫—É –≤—ñ–¥–Ω—è—Ç–∏ —Ä—ñ–∫ –≤—Å—Ç—É–ø—É –¥–æ –≤—É–∑—É. –ü–æ—Ç–æ—á–Ω–∏–π —Ä—ñ–∫ –æ—Ç—Ä–∏–º–∞—î—Ç–µ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ
// –ü—Ä–∏–∫–ª–∞–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –µ–∫–∑–µ–º–ø–ª—è—Ä—É –∫–ª–∞—Å–∞:
// const student = new Student('–ü–µ—Ç—Ä–∏–∫', '–ü—è—Ç–æ—á–∫–∏–Ω', 2019);

// class User {
//   constructor(firstName, lastName) {
//     this.firstName = firstName;
//     this.lastName = lastName;
//   }

//   getFullName() {
//     return `${this.firstName} ${this.lastName}`;
//   }
// }

// class Student extends User {
//   constructor(firstName, lastName, year) {
//     super(firstName, lastName);
//     this.year = year;
//   }

//   getCourse() {
//     const today = new Date();
//     const currentYear = today.getFullYear();
//     const diff = currentYear - this.year;
//     if (currentYear < this.year) {
//       return "–°—Ç—É–¥–µ–Ω—Ç —â–µ –Ω–µ –≤—Å—Ç—É–ø–∏–≤ –¥–æ –í–£–ó–£";
//     }

//     if (diff > 5) {
//       return "–°—Ç—É–¥–µ–Ω—Ç –≤–∂–µ –≤–∏–ø—É—Å–∫–Ω–∏–∫!";
//     }

//     return `${diff} –∫—É—Ä—Å`;
//   }
// }

// const student = new Student("–ü–µ—Ç—Ä–∏–∫", "–ü—è—Ç–æ—á–∫–∏–Ω", 2019);
// console.log(student);
// console.log(student.getFullName()); //–ø–æ–≤–µ—Ä–Ω–µ '–ü–µ—Ç—Ä–∏–∫ –ü—è—Ç–æ—á–∫–∏–Ω'
// console.log(student.getCourse()); //–ø–æ–≤–µ—Ä–Ω–µ 4

// *******Task-4******* \\

// –ù–µ–æ–±—Ö—ñ–¥–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞—Å BankAccount, —è–∫–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –±–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π —Ä–∞—Ö—É–Ω–æ–∫. –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å balance, —è–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –±–∞–ª–∞–Ω—Å —Ä–∞—Ö—É–Ω–∫—É. –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω —Ç–∞–∫–æ–∂ –º–∞—Ç–∏ –ø—É–±–ª—ñ—á–Ω—ñ –º–µ—Ç–æ–¥–∏ deposit —Ç–∞ withdraw, —è–∫—ñ –¥–æ–∑–≤–æ–ª—è—é—Ç—å –∑–¥—ñ–π—Å–Ω—é–≤–∞—Ç–∏ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –¥–µ–ø–æ–∑–∏—Ç–æ–º —Ç–∞ –∑–Ω—è—Ç—Ç—è–º –∫–æ—à—Ç—ñ–≤ –∑ —Ä–∞—Ö—É–Ω–∫—É.

const TRANSACTIONS_TYPE = {
  deposit: "deposit",
  withdraw: "withdraw",
};

class BankAccount {
  constructor() {
    this.balance = 0;
    this.transactionHistory = [];
  }

  createTransaction(amount, type) {
    const transaction = this.createTransactionObject(amount, type);
    this.transactionHistory.push(transaction);
  }

  createTransactionObject(amount, type) {
    return {
      amount,
      type,
      id: this.transactionHistory.length,
    };
  }

  deposit(amount) {
    if (amount <= 0) {
      console.log(`‚ùå –ù–µ –º–æ–∂–Ω–∞ –ø–æ–∫–ª–∞—Å—Ç–∏ –≤—ñ–¥ º—î–º–Ω—É —Å—É–º—É! ${this.getBalance()}`);
      return;
    }

    this.balance += amount;
    console.log(`‚úÖ üíµ –£—Å–ø—ñ—à–Ω–æ –∑–∞—á–∏—Å–ª–µ–Ω–æ ${amount} –≥—Ä–Ω. ${this.getBalance()}`);
    this.createTransaction(amount, TRANSACTIONS_TYPE.deposit);
  }

  withdraw(amount) {
    if (amount <= 0) {
      console.log(`‚ùå –ù–µ –º–æ–∂–Ω–∞ –∑–Ω—è—Ç–∏ –≤—ñ–¥ º—î–º–Ω—É —Å—É–º—É! ${this.getBalance()}`);
    } else if (amount > this.balance) {
      console.log(`‚ùå –ù–µ–¥–æ—Å—Ç–∞–Ω—å–æ –∫–æ—à—Ç—ñ–≤! ${this.getBalance()}`);
    } else {
      this.balance -= amount;
      console.log(`‚úÖ üí∏ –£—Å–ø—ñ—à–Ω–æ –∑–Ω—è—Ç–æ ${amount} –≥—Ä–Ω. ${this.getBalance()}`);
      this.createTransaction(amount, TRANSACTIONS_TYPE.withdraw);
    }
  }

  getBalance() {
    return `–ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å: ${this.balance} –≥—Ä–Ω.`;
  }
}

const instance = new BankAccount();
instance.deposit(-100);
instance.deposit(1200);
instance.withdraw(1000);
instance.withdraw(-1000);
instance.withdraw(500);
instance.deposit(10000);
instance.withdraw(10000);
console.log(instance);
