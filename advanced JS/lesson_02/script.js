// //! –ü—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ç–∞ –º–µ—Ç–æ–¥–∏

// class User {
//   #password;
//   constructor(firstName, lastName, password) {
//     this.firstName = firstName; // –ø—É–±–ª—ñ—á–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (–¥–æ—Å—Ç—É–ø–Ω—ñ —á–µ—Ä–µ–∑ –µ–∫–∑–µ–º–ø–ª—è—Ä —ñ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –∫–ª–∞—Å—É)
//     this.lastName = lastName;
//     this.#password = password; // –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (–¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –∫–ª–∞—Å—É + —ó—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–≥–æ–ª–æ—Å–∏—Ç–∏ –∑–∞ –º–µ–∂–∞–º–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—É —á–µ—Ä–µ–∑ #)
//   }

//   getFullName() {
//     // –ø—É–±–ª—ñ—á–Ω–∏–π –º–µ—Ç–æ–¥
//     // if (this.#checkPassword()) {
//     //   return `${this.firstName} ${this.lastName}`;
//     // } else {
//     //   return "Who are you?";
//     // }

//     // —Ç–µ—Ä–Ω–∞—Ä–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä
//     return this.#checkPassword()
//       ? `${this.firstName} ${this.lastName}`
//       : "Who are you?";
//   }

//   #checkPassword() {
//     // –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –º–µ—Ç–æ–¥
//     const password = prompt("Enter your password:");
//     return password === this.#password;
//   }
// }

// const user1 = new User("Oleg", "Ivanov", "qwerty");

// console.log(user1);
// console.log(user1.getFullName());

//! –ì–µ—Ç—Ç–µ—Ä–∏ —ñ –°–µ—Ç—Ç–µ—Ä–∏

// class User {
//   #password;
//   #email;
//   constructor({ firstName, lastName, password, email }) {
//     this.firstName = firstName; // –ø—É–±–ª—ñ—á–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (–¥–æ—Å—Ç—É–ø–Ω—ñ —á–µ—Ä–µ–∑ –µ–∫–∑–µ–º–ø–ª—è—Ä —ñ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –∫–ª–∞—Å—É)
//     this.lastName = lastName;
//     this.#password = password; // –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (–¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –∫–ª–∞—Å—É + —ó—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–≥–æ–ª–æ—Å–∏—Ç–∏ –∑–∞ –º–µ–∂–∞–º–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—É —á–µ—Ä–µ–∑ #)
//     this.#email = email;
//   }

//   getFullName() {
//     // –ø—É–±–ª—ñ—á–Ω–∏–π –º–µ—Ç–æ–¥

//     // —Ç–µ—Ä–Ω–∞—Ä–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä
//     return this.#checkPassword()
//       ? `${this.firstName} ${this.lastName}`
//       : "Who are you?";
//   }

//   #checkPassword() {
//     // –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –º–µ—Ç–æ–¥
//     const password = prompt("Enter your password:");
//     return password === this.#password;
//   }

//   // –≥–µ—Ç—Ç–µ—Ä, —è —Å—Ç–≤–æ—Ä–∏–≤ –ø—É–±–ª—ñ—á–Ω–µ –ø–æ–ª–µ, —è–∫–µ —è –Ω–∞–∑–≤–∞–≤ email —ñ —è–∫—â–æ –ø–∞—Ä–æ–ª—å –≤—ñ—Ä–Ω–∏–π - —Ç–æ —è –æ—Ç—Ä–∏–º–∞—é –¥–æ—Å—Ç—É–ø –¥–æ –ø–æ—à—Ç–∏
//   get email() {
//     if (this.#checkPassword()) {
//       return this.#email;
//     }
//   }

//   // —Å–µ—Ç—Ç–µ—Ä, —è —Å—Ç–≤–æ—Ä–∏–≤ –ø—É–±–ª—ñ—á–Ω–µ –ø–æ–ª–µ, —è–∫–µ —è –Ω–∞–∑–≤–∞–≤ email —ñ —è–∫—â–æ –ø–∞—Ä–æ–ª—å –≤—ñ—Ä–Ω–∏–π - —Ç–æ —è –æ—Ç—Ä–∏–º–∞—é –¥–æ—Å—Ç—É–ø –¥–æ –ø–æ—à—Ç–∏ —ñ –∑–º–æ–∂—É —ó—ó –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç–∏
//   set email(newEmail) {
//     if (this.#checkPassword()) {
//       this.#email = newEmail; // –ø–µ—Ä–µ–∑–∞–ø–∏—Å—É—é –ø—Ä–∏–≤–∞—Ç–Ω–µ –ø–æ–ª–µ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –∫–ª–∞—Å—É
//     }
//   }
// }

// const user1 = new User({
//   firstName: "Oleg",
//   lastName: "Ivanov",
//   password: "qwerty",
//   email: "example@gmail.com",
// });

// console.log(user1);
// console.log(user1.email);
// user1.email = "newemail@gmail.com";
// console.log(user1.email);

// *******Task-4******* \\

// –ù–µ–æ–±—Ö—ñ–¥–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞—Å BankAccount, —è–∫–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –±–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π —Ä–∞—Ö—É–Ω–æ–∫. –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å balance, —è–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –±–∞–ª–∞–Ω—Å —Ä–∞—Ö—É–Ω–∫—É. –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω —Ç–∞–∫–æ–∂ –º–∞—Ç–∏ –ø—É–±–ª—ñ—á–Ω—ñ –º–µ—Ç–æ–¥–∏ deposit —Ç–∞ withdraw, —è–∫—ñ –¥–æ–∑–≤–æ–ª—è—é—Ç—å –∑–¥—ñ–π—Å–Ω—é–≤–∞—Ç–∏ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –¥–µ–ø–æ–∑–∏—Ç–æ–º —Ç–∞ –∑–Ω—è—Ç—Ç—è–º –∫–æ—à—Ç—ñ–≤ –∑ —Ä–∞—Ö—É–Ω–∫—É.

class BankAccount {
  //—Å—Ç–∞—Ç–∏—á–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ (–Ω–µ –∑–º—ñ–Ω—é—é—Ç—å—Å—è) –≤–æ–Ω–∏ —Å—Ç–≤–æ—Ä—é—é—Ç—å—Å—è –≤ —Å–∞–º–æ–º—É –∫–ª–∞—Å—ñ —ñ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –¢–Ü–õ–¨–ö–ò —á–µ—Ä–µ–∑ —Å–∞–º –∫–ª–∞—Å (—ó—Ö –Ω–µ–º–∞—î —É –µ–∫–∑–µ–º–ø–ª—è—Ä—ñ–≤)
  static TRANSACTIONS_TYPE = {
    deposit: "deposit",
    withdraw: "withdraw",
  };
  #balance;

  constructor() {
    this.#balance = 0;
    this.transactionHistory = [];
  }

  createTransaction(amount, type) {
    const transaction = this.createTransactionObject(amount, type);
    this.transactionHistory.push(transaction);
  }

  createTransactionObject(amount, type) {
    return {
      amount,
      type,
      id: this.transactionHistory.length,
    };
  }

  deposit(amount) {
    if (amount <= 0) {
      console.log(`‚ùå –ù–µ –º–æ–∂–Ω–∞ –ø–æ–∫–ª–∞—Å—Ç–∏ –≤—ñ–¥ º—î–º–Ω—É —Å—É–º—É! ${this.getBalance()}`);
      return;
    }

    this.#balance += amount;
    console.log(`‚úÖ üíµ –£—Å–ø—ñ—à–Ω–æ –∑–∞—á–∏—Å–ª–µ–Ω–æ ${amount} –≥—Ä–Ω. ${this.getBalance()}`);
    this.createTransaction(amount, BankAccount.TRANSACTIONS_TYPE.deposit);
  }

  withdraw(amount) {
    if (amount <= 0) {
      console.log(`‚ùå –ù–µ –º–æ–∂–Ω–∞ –∑–Ω—è—Ç–∏ –≤—ñ–¥ º—î–º–Ω—É —Å—É–º—É! ${this.getBalance()}`);
    } else if (amount > this.#balance) {
      console.log(`‚ùå –ù–µ–¥–æ—Å—Ç–∞–Ω—å–æ –∫–æ—à—Ç—ñ–≤! ${this.getBalance()}`);
    } else {
      this.#balance -= amount;
      console.log(`‚úÖ üí∏ –£—Å–ø—ñ—à–Ω–æ –∑–Ω—è—Ç–æ ${amount} –≥—Ä–Ω. ${this.getBalance()}`);
      this.createTransaction(amount, BankAccount.TRANSACTIONS_TYPE.withdraw);
    }
  }

  getBalance() {
    return `–ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å: ${this.#balance} –≥—Ä–Ω.`;
  }
}

const instance = new BankAccount();
instance.deposit(-100);
instance.deposit(1200);
instance.withdraw(1000);
instance.withdraw(-1000);
instance.withdraw(500);
instance.deposit(10000);
instance.withdraw(10000);
console.log(instance);

console.log(BankAccount.TRANSACTIONS_TYPE.deposit);
